(dp1
S'output'
p2
S"<class 'pysqlite2.dbapi2.OperationalError'> no such table: auth_user"
p3
sS'layer'
p4
S'/home/aldrix/Escritorio/internships/applications/Empresas/controllers/empresa.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n# Proceso de registro de empresa por medio de la opcion Empresa -> Registrarse, en el Index\ndef registrar_empresa():\n    # Agregamos los campos en el orden deseado, comenzamos con el login y el password\n    fields = [dbSPE.empresa.log,dbSPE.empresa.password]\n    # Agregamos un campo extra de comfirm password el cual debera tener el mismo valor que el password para ser aceptado\n    fields += [Field(\'comfirm_Password\',\'password\', label=T(\'Comfirm Password\'),\n                     requires = [IS_EXPR(\'value==%s\' % repr(request.vars.password),error_message=T(\'Las contrase\xc3\xb1as no coinciden\'))])]\n    # Agregamos el resto de los campos\n    fields += [\n        dbSPE.empresa.pregunta_secreta,\n        dbSPE.empresa.respuesta_pregunta_secreta,\n        dbSPE.empresa.nombre,\n        dbSPE.empresa.id_pais,\n        dbSPE.empresa.id_estado,\n        dbSPE.empresa.direccion,\n        dbSPE.empresa.pag_web,\n        dbSPE.empresa.descripcion,\n        dbSPE.empresa.telefono,\n        dbSPE.empresa.contacto_RRHH\n        ]\n    # Generamos el SQLFORM utilizando los campos\n    form = SQLFORM.factory(\n    *fields,submit_button=\'Submit\',\n    separator=\': \',\n    buttons=[\'submit\'],\n    col3 = {\'log\':T(\'Identificaci\xc3\xb3n de acceso unica asignada a la empresa\'),\n            \'password\':T(\'Contrase\xc3\xb1a para acceder al sistema\'),\n            \'comfirm_Password\':T(\'Repita su contrase\xc3\xb1a\'),\n            \'pregunta_secreta\':T(\'Si necesita obtener de nuevo su contrase\xc3\xb1a se le hara esta pregunta\'),\n            \'respuesta_pregunta_secreta\':T(\'Respuesta a su pregunta secreta\'),\n            \'nombre\':T(\'Nombre comercial de la empresa\'),\n            \'id_pais\':T(\'Pais en el que se encuentra la empresa\'),\n            \'id_estado\':T(\'Estado del pais en el que se encuentra\'),\n            \'direccion\':T(\'Direccion de las instalaciones de la empresa\'),\n            \'pag_web\':T(\'Pagina Web de la empresa\'),\n            \'descripcion\':T(\'Descripcion breve de la empresa, su vision y sus funciones\'),\n            \'telefono\':T(\'Numero telefonico de contacto de la empresa\'),\n            \'contacto_RRHH\':T(\'Correo de contacto del departamento de recursos humanos de la empresa\')}\n    )\n\n    # Caso 1: El form se lleno de manera correcta asi que registramos la empresa y procedemos a la pagina de exito\n    if form.process().accepted:\n        # Registramos la empresa\n        dbSPE.empresa.insert(log = request.vars.log,\n                             password = request.vars.password,\n                             pregunta_secreta = request.vars.pregunta_secreta,\n                             respuesta_pregunta_secreta = request.vars.respuesta_pregunta_secreta,\n                             nombre = request.vars.nombre,\n                             id_pais = request.vars.id_pais,\n                             id_estado = request.vars.id_estado,\n                             direccion = request.vars.direccion,\n                             pag_web = request.vars.pag_web,\n                             descripcion = request.vars.descripcion,\n                             telefono = request.vars.telefono,\n                             contacto_RRHH = request.vars.contacto_RRHH)\n\n        #Insertamos en la tabla User de Web2py, para el login\n        result = db.auth_user.insert(\n            username   = request.vars.log,\n            first_name = request.vars.nombre,\n            password   = db.auth_user.password.validate(request.vars.password)[0],\n            email      = request.vars.contacto_RRHH,\n            user_Type  = \'empresa\'\n        )\n\n        # Mensaje de exito\n        response.flash = T("Registro Exitoso")\n        # Nos dirigimos a la pagina de exito\n        return response.render(\'empresa/registrarEmpresa/registro_empresa_exitoso.html\',message=T("Registrar Empresa"),\n                               result=T("El registro de su empresa ha sido exitoso!"),\n                               log=request.vars.log,\n                               nombre=request.vars.nombre,\n                               direccion=request.vars.direccion,\n                               id_pais = request.vars.id_pais,\n                               id_estado = request.vars.id_estado,\n                               pag_web=request.vars.pag_web,\n                               descripcion=request.vars.descripcion,\n                               telefono=request.vars.telefono,\n                               contacto_RRHH=request.vars.contacto_RRHH,\n                               pregunta_secreta=request.vars.pregunta_secreta,\n                               respuesta_pregunta_secreta=request.vars.respuesta_pregunta_secreta)\n    # Caso 2: El form no se lleno de manera correcta asi que recargamos la pagina\n    else:\n        return response.render(\'empresa/registrarEmpresa/registrar_empresa.html\',message=T("Registrar Empresa"),form=form)\n\ndef registrar_tutor_industrial():\n    # Agregamos los campos en el orden deseado, comenzamos con el login y el password\n    fields =[\n       dbSPE.tutor_industrial.email,\n        dbSPE.tutor_industrial.nombre,\n        dbSPE.tutor_industrial.apellido,\n        dbSPE.tutor_industrial.ci,\n        dbSPE.tutor_industrial.password\n    ]\n    # Agregamos un campo extra de comfirm password el cual debera tener el mismo valor que el password para ser aceptado\n    fields += [Field(\'comfirm_Password\',\'password\', label=T(\'Comfirm Password\'),\n                     requires = [IS_EXPR(\'value==%s\' % repr(request.vars.password),error_message=T(\'Las contrase\xc3\xb1as no coinciden\'))])]\n    # Agregamos el resto de los campos\n    fields +=[\n        dbSPE.tutor_industrial.pregunta_secreta,\n        dbSPE.tutor_industrial.respuesta_pregunta_secreta,\n        dbSPE.tutor_industrial.profesion,\n        dbSPE.tutor_industrial.cargo,\n        dbSPE.tutor_industrial.departamento,\n        dbSPE.tutor_industrial.direccion,\n        dbSPE.tutor_industrial.id_pais,\n        dbSPE.tutor_industrial.id_estado,\n        dbSPE.tutor_industrial.telefono\n    ]\n\n\n    # Generamos el SQLFORM utilizando los campos\n    form = SQLFORM.factory(\n    *fields,submit_button=\'Submit\',\n    separator=\': \',\n    buttons=[\'submit\'],\n    col3 = {\'email\':T(\'Identificaci\xc3\xb3n de acceso unica asignada a la empresa\'),\n            \'nombre\':T(\'Nombre comercial de la empresa\'),\n            \'apellido\':T(\'Nombre comercial de la empresa\'),\n            \'ci\':T(\'Nombre comercial de la empresa\'),\n            \'password\':T(\'Contrase\xc3\xb1a para acceder al sistema\'),\n            \'comfirm_Password\':T(\'Repita su contrase\xc3\xb1a\'),\n            \'pregunta_secreta\':T(\'Si necesita obtener de nuevo su contrase\xc3\xb1a se le hara esta pregunta\'),\n            \'respuesta_pregunta_secreta\':T(\'Respuesta a su pregunta secreta\'),\n            \'profesion\':T(\'Profesion del tutor industrial\'),\n            \'cargo\':T(\'Cargo que ocupa en la empresa\'),\n            \'departamento\':T(\'Departamento de la empresa en la que trabaja\'),\n            \'direccion\':T(\'Direccion del tutor industrial\'),\n            \'id_estado\':T(\'Estado en el que se encuentra domiciliado el tutor industrial\'),\n            \'telefono\':T(\'Numerico telefonico del tutor industrial\')\n           })\n    # Caso 1: El form se lleno de manera correcta asi que registramos al tutor y procedemos a la pagina de exito\n    if form.process().accepted:\n        # Buscamos el id de la empresa\n        empresaRegistradoraSet = dbSPE(dbSPE.empresa.log == auth.user.username).select()\n        empresaRegistradora = empresaRegistradoraSet[0]\n        # Registramos la empresa\n        dbSPE.tutor_industrial.insert(\n            email = request.vars.email,\n            nombre = request.vars.nombre,\n            apellido = request.vars.apellido,\n            ci = request.vars.ci,\n            password = request.vars.password,\n            pregunta_secreta = request.vars.pregunta_secreta,\n            respuesta_pregunta_secreta = request.vars.respuesta_pregunta_secreta,\n            id_empresa = empresaRegistradora.id, # Cableado mientras se resuelven problemas\n            profesion = request.vars.profesion,\n            cargo = request.vars.cargo,\n            departamento = request.vars.departamento,\n            direccion = request.vars.direccion,\n            id_estado = request.vars.id_estado, #Estara asi hasta que se implemente la tabla estado\n            telefono = request.vars.telefono)\n\n        #Insertamos en la tabla user de Web2py\n        result = db.auth_user.insert(\n            first_name = request.vars.nombre,\n            last_name  = request.vars.apellido,\n            username   = request.vars.email,\n            password   = db.auth_user.password.validate(request.vars.password)[0],\n            email      = request.vars.email,\n            user_Type  = \'tutor_industrial\'\n        )\n\n        # Mensaje de exito\n        response.flash = T("Registro Exitoso")\n        # Nos dirigimos a la pagina de exito\n        return response.render(\'empresa/registrarTutorIndustrial/registro_tutor_industrial_exitoso.html\',message=T("Registrar Tutor Industrial"),\n                               result=T("El registro de su tutor ha sido exitoso!"),\n                               email = request.vars.email,\n                               nombre = request.vars.nombre,\n                               apellido = request.vars.apellido,\n                               ci = request.vars.ci,\n                               id_empresa = empresaRegistradora.id, # Cableado mientras se resuelven problemas\n                               profesion = request.vars.profesion,\n                               cargo = request.vars.cargo,\n                               departamento = request.vars.departamento,\n                               direccion = request.vars.direccion,\n                               id_estado = None, #Estara asi hasta que se implemente la tabla estado\n                               telefono = request.vars.telefono)\n    # Caso 2: El form no se lleno de manera correcta asi que recargamos la pagina\n    else:\n        return response.render(\'empresa/registrarTutorIndustrial/registrar_tutor_industrial.html\',message=T("Registrar Tutor Industrial"),form=form)\n\nresponse._vars=response._caller(registrar_empresa)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/aldrix/Escritorio/internships/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/aldrix/Escritorio/internships/applications/Empresas/controllers/empresa.py", line 186, in <module>\n  File "/home/aldrix/Escritorio/internships/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/aldrix/Escritorio/internships/applications/Empresas/controllers/empresa.py", line 65, in registrar_empresa\n    user_Type  = \'empresa\'\n  File "/home/aldrix/Escritorio/internships/gluon/packages/dal/pydal/objects.py", line 731, in insert\n    ret = self._db._adapter.insert(self, self._listify(fields))\n  File "/home/aldrix/Escritorio/internships/gluon/packages/dal/pydal/adapters/base.py", line 746, in insert\n    raise e\nOperationalError: no such table: auth_user\n'
p11
s.