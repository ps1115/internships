(dp1
S'output'
p2
S'<class \'gluon.contrib.pymysql.err.ProgrammingError\'> (1146, u"Table \'mysql.pasantia1\' doesn\'t exist")'
p3
sS'layer'
p4
S'/home/andres/Documents/internships/applications/SPE/controllers/profesor.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n# Proceso de registro de empresa por medio de la opcion Empresa -> Registrarse, en el Index\ndef justificar_retiro_pasante():\n    # Agregamos los campos en el orden deseado\n    fields = [dbSYQ.pasantia1.codigo,dbSYQ.pasantia1.periodo,dbSYQ.pasantia1.motivo_retiro_tutor_academico]\n    # Generamos el SQLFORM utilizando los campos\n    form = SQLFORM.factory(\n    *fields,submit_button=\'Submit\',\n    separator=\': \',\n    buttons=[\'submit\'],\n    col3 = {\'codigo\':T(\'Codigo de La Pasantia\'),\n            \'periodo\':T(\'Trimestre\'),\n            \'motivo_retiro_tutor_academico\':T(\'Redacte el Motivo\')}\n    )\n\n    # Caso 1: El form se lleno de manera correcta asi que registramos la empresa y procedemos a la pagina de exito\n    if form.process().accepted:\n        # Registramos la empresa\n        dbSYQ.pasantia1.insert(codigo = request.vars.codigo,\n                             periodo = request.vars.periodo,\n                             motivo_retiro_tutor_academico = request.vars.motivo_retiro_tutor_academico)\n        # Mensaje de exito\n        response.flash = T("Registro Exitoso")\n        # Nos dirigimos a la pagina de exito\n        return response.render(\'default/index.html\',message=T("Subir Carta"),\n                               result=T("El registro de su empresa ha sido exitoso!"))\n    # Caso 2: El form no se lleno de manera correcta asi que recargamos la pagina\n    else:\n        return response.render(\'profesor/justificar_retiro_pasante.html\',message=T("Carta de Motivo"),form=form)\n\nresponse._vars=response._caller(justificar_retiro_pasante)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/andres/Documents/internships/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/andres/Documents/internships/applications/SPE/controllers/profesor.py", line 32, in <module>\n  File "/home/andres/Documents/internships/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/andres/Documents/internships/applications/SPE/controllers/profesor.py", line 22, in justificar_retiro_pasante\n    motivo_retiro_tutor_academico = request.vars.motivo_retiro_tutor_academico)\n  File "/home/andres/Documents/internships/gluon/packages/dal/pydal/objects.py", line 731, in insert\n    ret = self._db._adapter.insert(self, self._listify(fields))\n  File "/home/andres/Documents/internships/gluon/packages/dal/pydal/adapters/base.py", line 746, in insert\n    raise e\nProgrammingError: (1146, u"Table \'mysql.pasantia1\' doesn\'t exist")\n'
p11
s.